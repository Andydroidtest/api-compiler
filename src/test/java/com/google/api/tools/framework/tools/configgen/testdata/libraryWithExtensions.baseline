WARNING: toplevel: The api_service name {} does not match the base service name {library-example} of {library-example.googleapis.com}.
WARNING: toplevel: (lint) control-presence: Service library-example.googleapis.com does not have control environment configured.
WARNING: library_extension.proto:10:5: (lint) documentation-presence: 'google.example.library.v1.extensions.Extender google.example.library.v1.Shelf.(google.example.library.v1.extensions.Extender.extender)' has no documentation, neither in IDL nor config.
WARNING: library_extension.proto:26:7: (lint) documentation-presence: 'google.example.library.v1.extensions.Outer.Inner google.example.library.v1.Shelf.(google.example.library.v1.extensions.Outer.Inner.inner)' has no documentation, neither in IDL nor config.
WARNING: library_with_extensions.yaml:2: (lint) versioning-config: Specified config_version value '2' is not equal to the current default value '3'. Consider changing this value to the default config version.
============== file: normalized config without derived data ==============
name: "library-example.googleapis.com"
title: "Google Example Library API"
apis {
  name: "google.example.library.v1.LibraryService"
  methods {
    name: "CreateShelf"
    request_type_url: "type.googleapis.com/google.example.library.v1.CreateShelfRequest"
    response_type_url: "type.googleapis.com/google.example.library.v1.Shelf"
    options {
      name: "google.api.http"
      value {
        type_url: "type.googleapis.com/google.api.HttpRule"
        value: "\"\v/v1/shelves:\005shelf"
      }
    }
  }
  methods {
    name: "GetShelf"
    request_type_url: "type.googleapis.com/google.example.library.v1.GetShelfRequest"
    response_type_url: "type.googleapis.com/google.example.library.v1.Shelf"
    options {
      name: "google.api.http"
      value {
        type_url: "type.googleapis.com/google.api.HttpRule"
        value: "\022\024/v1/{name=shelves/*}"
      }
    }
  }
  methods {
    name: "RestrictedGetShelf"
    request_type_url: "type.googleapis.com/google.example.library.v1.GetShelfRequest"
    response_type_url: "type.googleapis.com/google.example.library.v1.Shelf"
    options {
      name: "google.api.method_visibility"
      value {
        type_url: "type.googleapis.com/google.api.VisibilityRule"
        value: "\022\016TRUSTED_TESTER"
      }
    }
    options {
      name: "google.api.http"
      value {
        type_url: "type.googleapis.com/google.api.HttpRule"
        value: "\022\037/v1/restricted/{name=shelves/*}"
      }
    }
  }
  methods {
    name: "ListShelves"
    request_type_url: "type.googleapis.com/google.example.library.v1.ListShelvesRequest"
    response_type_url: "type.googleapis.com/google.example.library.v1.ListShelvesResponse"
    options {
      name: "google.api.http"
      value {
        type_url: "type.googleapis.com/google.api.HttpRule"
        value: "\022\v/v1/shelves"
      }
    }
  }
  methods {
    name: "DeleteShelf"
    request_type_url: "type.googleapis.com/google.example.library.v1.DeleteShelfRequest"
    response_type_url: "type.googleapis.com/google.protobuf.Empty"
    options {
      name: "google.api.http"
      value {
        type_url: "type.googleapis.com/google.api.HttpRule"
        value: "*\024/v1/{name=shelves/*}"
      }
    }
  }
  version: "v1"
  source_context {
    file_name: "library_with_extensions.proto"
  }
}
types {
  name: "google.protobuf.Empty"
  source_context {
    file_name: "google/protobuf/empty.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.example.library.v1.Shelf"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "name"
    json_name: "name"
    default_value: "foo"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "theme"
    json_name: "theme"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 3
    name: "internal_theme"
    json_name: "internalTheme"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 4
    name: "restricted_theme"
    options {
      name: "google.api.field_visibility"
      value {
        type_url: "type.googleapis.com/google.api.VisibilityRule"
        value: "\022\016TRUSTED_TESTER"
      }
    }
    json_name: "restrictedTheme"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 5
    name: "(google.example.library.v1.extensions.Extender.extender)"
    type_url: "type.googleapis.com/google.example.library.v1.extensions.Extender"
    json_name: "extender"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 6
    name: "(google.example.library.v1.extensions.baz)"
    json_name: "baz"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 7
    name: "(google.example.library.v1.extensions.Outer.Inner.inner)"
    type_url: "type.googleapis.com/google.example.library.v1.extensions.Outer.Inner"
    json_name: "inner"
  }
  source_context {
    file_name: "library_with_extensions.proto"
  }
}
types {
  name: "google.example.library.v1.CreateShelfRequest"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    type_url: "type.googleapis.com/google.example.library.v1.Shelf"
    json_name: "shelf"
  }
  source_context {
    file_name: "library_with_extensions.proto"
  }
}
types {
  name: "google.example.library.v1.GetShelfRequest"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "name"
    json_name: "name"
  }
  source_context {
    file_name: "library_with_extensions.proto"
  }
}
types {
  name: "google.example.library.v1.ListShelvesRequest"
  fields {
    kind: TYPE_INT32
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "page_size"
    json_name: "size"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "page_token"
    json_name: "pageToken"
  }
  source_context {
    file_name: "library_with_extensions.proto"
  }
}
types {
  name: "google.example.library.v1.ListShelvesResponse"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_REPEATED
    number: 1
    name: "shelves"
    type_url: "type.googleapis.com/google.example.library.v1.Shelf"
    json_name: "shelves"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "next_page_token"
    json_name: "nextPageToken"
  }
  source_context {
    file_name: "library_with_extensions.proto"
  }
}
types {
  name: "google.example.library.v1.DeleteShelfRequest"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "name"
    json_name: "name"
  }
  source_context {
    file_name: "library_with_extensions.proto"
  }
}
types {
  name: "google.example.library.v1.extensions.Extender"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "test"
    json_name: "test"
  }
  source_context {
    file_name: "library_extension.proto"
  }
}
types {
  name: "google.example.library.v1.extensions.Outer"
  source_context {
    file_name: "library_extension.proto"
  }
}
types {
  name: "google.example.library.v1.extensions.Outer.Inner"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "test"
    json_name: "test"
  }
  source_context {
    file_name: "library_extension.proto"
  }
}
documentation {
  summary: "A simple Google Example Library API."
  rules {
    selector: "google.example.library.v1.Shelf"
    description: "A Shelf contains a collection of books with a theme."
  }
  rules {
    selector: "google.example.library.v1.Shelf.name"
    description: "The resource name of the shelf.\nShelf names have the form `shelves/{shelf_id}`.\nThe name is ignored when creating a shelf."
  }
  rules {
    selector: "google.example.library.v1.Shelf.theme"
    description: "The theme of the shelf"
  }
  rules {
    selector: "google.example.library.v1.Shelf.internal_theme"
    description: "A field that the backend filters based on visibility."
  }
  rules {
    selector: "google.example.library.v1.Shelf.restricted_theme"
    description: "A field that is filered based on visibility."
  }
  rules {
    selector: "google.example.library.v1.Shelf.(google.example.library.v1.extensions.baz)"
    description: "Baz"
  }
  rules {
    selector: "google.example.library.v1.CreateShelfRequest"
    description: "Request message for LibraryService.CreateShelf."
  }
  rules {
    selector: "google.example.library.v1.CreateShelfRequest.shelf"
    description: "The shelf to create."
  }
  rules {
    selector: "google.example.library.v1.GetShelfRequest"
    description: "Request message for LibraryService.GetShelf."
  }
  rules {
    selector: "google.example.library.v1.GetShelfRequest.name"
    description: "The name of the shelf to retrieve."
  }
  rules {
    selector: "google.example.library.v1.ListShelvesRequest"
    description: "Request message for LibraryService.ListShelves."
  }
  rules {
    selector: "google.example.library.v1.ListShelvesRequest.page_size"
    description: "Requested page size. Server may return fewer shelves than requested.\nIf unspecified, server will pick an appropriate default."
  }
  rules {
    selector: "google.example.library.v1.ListShelvesRequest.page_token"
    description: "A token identifying a page of results the server should return.\nTypically, this is the value of\n[ListShelvesResponse.next_page_token][google.example.library.v1.ListShelvesResponse.next_page_token]\nreturned from the previous call to `ListShelves` method."
  }
  rules {
    selector: "google.example.library.v1.ListShelvesResponse"
    description: "Response message for LibraryService.ListShelves."
  }
  rules {
    selector: "google.example.library.v1.ListShelvesResponse.shelves"
    description: "The list of shelves."
  }
  rules {
    selector: "google.example.library.v1.ListShelvesResponse.next_page_token"
    description: "A token to retrieve next page of results.\nPass this value in the\n[ListShelvesRequest.page_token][google.example.library.v1.ListShelvesRequest.page_token]\nfield in the subsequent call to `ListShelves` method to retrieve the next\npage of results."
  }
  rules {
    selector: "google.example.library.v1.DeleteShelfRequest"
    description: "Request message for LibraryService.DeleteShelf."
  }
  rules {
    selector: "google.example.library.v1.DeleteShelfRequest.name"
    description: "The name of the shelf to delete."
  }
  rules {
    selector: "google.example.library.v1.LibraryService"
    description: "This API represents a simple digital library.  It lets you manage Shelf\nresources and Book resources in the library. It defines the following\nresource model:\n\n- The API has a collection of [Shelf][google.example.library.v1.Shelf]\n  resources, named `shelves/*`\n\n- Each Shelf has a collection of [Book][google.example.library.v1.Book]\n  resources, named `shelves/*/books/*`"
  }
  rules {
    selector: "google.example.library.v1.LibraryService.CreateShelf"
    description: "Creates a shelf, and returns the new Shelf."
  }
  rules {
    selector: "google.example.library.v1.LibraryService.GetShelf"
    description: "Gets a shelf. Returns NOT_FOUND if the shelf does not exist."
  }
  rules {
    selector: "google.example.library.v1.LibraryService.RestrictedGetShelf"
    description: "Gets a shelf. Returns NOT_FOUND if the shelf does not exist. This method\nhas restricted visibility."
  }
  rules {
    selector: "google.example.library.v1.LibraryService.ListShelves"
    description: "Lists shelves. The order is unspecified but deterministic. Newly created\nshelves will not necessarily be added to the end of this list."
  }
  rules {
    selector: "google.example.library.v1.LibraryService.DeleteShelf"
    description: "Deletes a shelf. Returns NOT_FOUND if the shelf does not exist."
  }
  rules {
    selector: "google.example.library.v1.extensions.Extender"
    description: "Extender"
  }
  rules {
    selector: "google.example.library.v1.extensions.Extender.test"
    description: "Test"
  }
  rules {
    selector: "google.example.library.v1.extensions.Outer"
    description: "Outer message"
  }
  rules {
    selector: "google.example.library.v1.extensions.Outer.Inner"
    description: "Inner extender"
  }
  rules {
    selector: "google.example.library.v1.extensions.Outer.Inner.test"
    description: "Test"
  }
}
http {
  rules {
    selector: "google.example.library.v1.LibraryService.CreateShelf"
    post: "/v1/shelves"
    body: "shelf"
  }
  rules {
    selector: "google.example.library.v1.LibraryService.GetShelf"
    get: "/v1/{name=shelves/*}"
  }
  rules {
    selector: "google.example.library.v1.LibraryService.RestrictedGetShelf"
    get: "/v1/restricted/{name=shelves/*}"
  }
  rules {
    selector: "google.example.library.v1.LibraryService.ListShelves"
    get: "/v1/shelves"
  }
  rules {
    selector: "google.example.library.v1.LibraryService.DeleteShelf"
    delete: "/v1/{name=shelves/*}"
  }
}
authentication {
  rules {
    selector: "google.example.library.v1.LibraryService.CreateShelf"
    oauth {
      canonical_scopes: "https://www.googleapis.com/auth/xapi.zoo"
    }
    allow_without_credential: true
  }
  rules {
    selector: "google.example.library.v1.LibraryService.GetShelf"
    oauth {
      canonical_scopes: "https://www.googleapis.com/auth/xapi.zoo"
    }
    allow_without_credential: true
  }
  rules {
    selector: "google.example.library.v1.LibraryService.RestrictedGetShelf"
    oauth {
      canonical_scopes: "https://www.googleapis.com/auth/xapi.zoo"
    }
    allow_without_credential: true
  }
  rules {
    selector: "google.example.library.v1.LibraryService.ListShelves"
    oauth {
      canonical_scopes: "https://www.googleapis.com/auth/xapi.zoo"
    }
    allow_without_credential: true
  }
  rules {
    selector: "google.example.library.v1.LibraryService.DeleteShelf"
    oauth {
      canonical_scopes: "https://www.googleapis.com/auth/xapi.zoo"
    }
    allow_without_credential: true
  }
}
context {
  rules {
    selector: "google.example.library.v1.LibraryService.CreateShelf"
    requested: "google.rpc.context.VisibilityContext"
    requested: "google.rpc.context.ProjectContext"
  }
  rules {
    selector: "google.example.library.v1.LibraryService.GetShelf"
    requested: "google.rpc.context.VisibilityContext"
    requested: "google.rpc.context.ProjectContext"
  }
  rules {
    selector: "google.example.library.v1.LibraryService.RestrictedGetShelf"
    requested: "google.rpc.context.VisibilityContext"
    requested: "google.rpc.context.ProjectContext"
  }
  rules {
    selector: "google.example.library.v1.LibraryService.ListShelves"
    requested: "google.rpc.context.VisibilityContext"
    requested: "google.rpc.context.ProjectContext"
  }
  rules {
    selector: "google.example.library.v1.LibraryService.DeleteShelf"
    requested: "google.rpc.context.VisibilityContext"
    requested: "google.rpc.context.ProjectContext"
  }
}
usage {
}
config_version {
  value: 2
}
system_parameters {
}

============== Successfully regenerated service config ==============
